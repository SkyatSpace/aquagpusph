<?xml version="1.0" ?>

<!-- Particles refinement and de-refinement.

This module depends on basic/domain.xml module, which should be included as
well. This module should be included once.

In order to modify the number of iterations to transfer the mass between partner
and children, redefine M_ITERS.

To use this module, include this file, and modify the particles set reading in
order to store the mass of the particles in the array m0, instead of m. You
are also responsible of initialize the miter and ilevel variables. Along this
line, miter should be initialized as M_ITERS, which is 10 by default.

Boundary elements/particles are not never split or coalesced. Therefore the user
is responsible to initialize them with the right resolution level

In order to ask for particles refinement, the level variable should become
edited. You can find some tools to do that in basic/multiresolution modules
folder.

Since this module may modify the mass of the particles, it should be included
AFTER variable_h.xml one.
-->

<sphInput>
    <Variables>
        <!-- Original mass of each particle -->
        <Variable name="m0" type="float*" length="N" />
        <Variable name="m0_in" type="float*" length="N" />
        <!-- Mass transfer iteration -->
        <Variable name="miter" type="int*" length="N" />        
        <Variable name="miter_in" type="int*" length="N" />        
        <!-- The refinement level each particle belongs, and the refinement
        level specified by the area -->
        <Variable name="ilevel" type="unsigned int*" length="N" />
        <Variable name="ilevel_in" type="unsigned int*" length="N" />
        <Variable name="level" type="unsigned int*" length="N" />
        <Variable name="level_in" type="unsigned int*" length="N" />
        <!-- Internal variables to mark the particles to become split/coalesced
        -->
        <Variable name="isplit" type="unsigned int*" length="n_radix" />
        <Variable name="split_perm" type="unsigned int*" length="n_radix" />
        <Variable name="split_invperm" type="unsigned int*" length="n_radix" />




        <!-- The original mass of each particle, and the transfer function -->
        <!-- Variable name="m0" type="float*" length="N" />
        <Variable name="gamma_m" type="float*" length="N" / -->
        <!-- The refinement level each particle belongs, and the refinement
        level specified by the area -->
        <!-- Variable name="ilevel0" type="unsigned int*" length="N" />
        <Variable name="ilevel" type="unsigned int*" length="N" />
        <Variable name="level" type="unsigned int*" length="N" / -->
        <!-- Internal variables to mark the particles to become splited -->
        <!-- Variable name="isplit" type="unsigned int*" length="n_radix" />
        <Variable name="split_perm" type="unsigned int*" length="n_radix" />
        <Variable name="split_invperm" type="unsigned int*" length="n_radix" / -->
        <!-- Sort helpers -->
        <!-- Variable name="m0_in" type="float*" length="N" />
        <Variable name="gamma_m_in" type="float*" length="N" />
        <Variable name="ilevel0_in" type="unsigned int*" length="N" />
        <Variable name="ilevel_in" type="unsigned int*" length="N" / -->
    </Variables>

    <Tools>
        <!-- Sort the intensive variables -->
        <Tool name="Backup m0" action="insert" before="Sort" type="copy" in="m0" out="m0_in"/>
        <Tool name="Backup miter" action="insert" before="Sort" type="copy" in="miter" out="miter_in"/>
        <Tool name="Backup ilevel" action="insert" before="Sort" type="copy" in="ilevel" out="ilevel_in"/>
        <Tool name="Backup level" action="insert" before="Sort" type="copy" in="level" out="level_in"/>
        <Tool name="basic multiresolution sort" action="insert" before="Sort" type="kernel" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Sort.cl"/>

        <!--    Refinement level
             ======================
        In order to determine whether a particle should become split, coalesced
        or even preserved, we must known the refinement level required. Such
        operation is relegated to the user. However, herein we are adding a
        dummy tool to signaling him where it should done. Also we are
        restarting the level to the default one, 0 -->
        <Tool name="Refinement level" action="insert" after="Predictor" type="dummy"/>
        <Tool name="basic init level" action="insert" before="Refinement level" type="set" in="level" value="0"/>

        <!--    Mass transfer
             ===================
        When a partner particle is split/coalesced in one or more children
        particles, it is not instantaneously removed. Instead, its mass is
        progressively transfered. The user may control the number of time steps
        before the mass is completely transfered from partners to children
        defining the variable M_ITERS (10 by default). When a partner particle
        lost all its mass, it is removed (i.e. sent to the buffer) -->
        <Tool name="Refinement mass" action="insert" after="Refinement level" type="kernel" entry_point="set_mass" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/SetMass.cl"/>

        <!--    Particles split
             =====================
        When a particle is marked with a refinement level bigger than its level,
        then such particle should be split, such that it turns into a partner
        particle, and 4/8 children particles are generated and associated to
        him. This process is a bit complex:
        1.- Each particle is analyzed to checkif it is already
        spliting/coalescing. If that's the case, the particle is ignored.
        2.- The remaining particles are checked looking for the ones which
        its refinement level is lower to the target one, and mark them to become
        split
        3.- The list of particles to become split is sorted as
        "non-split"/"split"/"out of bounds".
        4.- Then the new children particles are generated
        -->
        <Tool name="Refinement split" action="insert" after="Corrector" type="dummy"/>
        <Tool name="Set buffer" action="insert" before="Refinement split" type="dummy" />
        <Tool name="basic init isplit" action="insert" before="Refinement split" type="set" in="isplit" value="2"/>
        <Tool name="basic isplit" action="insert" before="Refinement split" type="kernel" entry_point="check_split" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Split.cl"/>
        <Tool name="basic sort isplit" action="insert" before="Refinement split" type="radix-sort" in="isplit" perm="split_perm" inv_perm="split_invperm"/>
        <Tool name="basic split" action="insert" before="Refinement split" type="kernel" entry_point="generate" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Split.cl"/>

        <!--    Particles coalesce
             ========================
        -->
        <Tool name="Refinement coalesce" action="insert" after="Refinement split" type="dummy"/>

        <!--    Outdated partners removal
             ===============================
        As commented above, when a partner particle lost all its mass (which
        has been transfered to the children), it is converted into a buffer
        particle -->
        <Tool name="Refinement removal" action="insert" before="Domain" type="kernel" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Remove.cl"/>
        

        <!-- Copy the original mass on each particle -->
        <!-- Tool name="basic reset mass" action="insert" before="Predictor" type="copy" in="m0" out="m"/>
        <Tool name="basic rescale mass" action="insert" after="Predictor" type="kernel" entry_point="set_mass" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/SetMass.cl"/ -->

        <!-- Sort the variables -->
        <!-- Tool name="Backup m0" action="insert" before="Sort" type="copy" in="m0" out="m0_in"/>
        <Tool name="Backup gamma_m" action="insert" before="Sort" type="copy" in="gamma_m" out="gamma_m_in"/>
        <Tool name="Backup ilevel0" action="insert" before="Sort" type="copy" in="ilevel0" out="ilevel0_in"/>
        <Tool name="Backup ilevel" action="insert" before="Sort" type="copy" in="ilevel" out="ilevel_in"/>
        <Tool name="basic multiresolution sort" action="insert" before="Sort" type="kernel" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Sort.cl"/ -->
        
        <!-- Initialize the target level of each particle -->
        <!-- Tool name="basic init level" action="insert" before="Refinement level" type="set" in="level" value="0"/>
        <Tool name="basic init gamma_m" action="insert" before="Refinement level" type="kernel" entry_point="init_gamma" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/SetMass.cl"/ -->
        <!-- Mark the particles to become splited -->
        <!-- Tool name="basic init isplit" action="insert" before="Split" type="set" in="isplit" value="2"/>
        <Tool name="basic isplit" action="insert" before="Split" type="kernel" entry_point="check_split" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Split.cl"/ -->
        <!-- Split the particles -->
        <!-- Tool name="basic sort isplit" action="insert" before="Split" type="radix-sort" in="isplit" perm="split_perm" inv_perm="split_invperm"/>
        <Tool name="basic split" action="insert" before="Split" type="kernel" entry_point="generate" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Split.cl"/ -->
        <!-- Coalesce the particles -->
        <!-- Tool name="basic coalesce" action="insert" before="Coalesce" type="kernel" path="@RESOURCES_OUTPUT_DIR@/Scripts/basic/multiresolution/Coalesce.cl"/ -->
    </Tools>

    <Include file="@RESOURCES_OUTPUT_DIR@/Presets/basic/setBuffer.xml" when="end"/>
</sphInput>
